set nocompatible
filetype plugin indent on
syntax enable

call plug#begin('~/.vim/plugged')
Plug 'airblade/vim-gitgutter'           " display git status in signcolumn
Plug 'altercation/vim-colors-solarized' " load solarized colorscheme TODO: configuration https://vimawesome.com/plugin/vim-colors-solarized-ours
Plug 'benmills/vimux'                   " integrate vim with tmux
Plug 'docunext/closetag.vim'            " close HTML tags TODO: https://vimawesome.com/plugin/vim-closetag instead?
Plug 'jremmen/vim-ripgrep'              " integration with ripgrep, support for :Rg
Plug 'junegunn/fzf'                     " base fzf integration repository
Plug 'junegunn/fzf.vim'                 " better vim support for fzf
Plug 'majutsushi/tagbar'                " adds integration with tags file
Plug 'maxmellon/vim-jsx-pretty'         " language support for jsx/tsx
Plug 'pangloss/vim-javascript'          " language support for js/es6
Plug 'prettier/vim-prettier'            " integrate vim with prettier
Plug 'scrooloose/nerdtree'              " tree file explorer
Plug 'sheerun/vim-polyglot'             " TODO - replace with individual plugins
Plug 'tommcdo/vim-lion'                 " align text around a character
Plug 'tpope/vim-commentary'             " comment out blocks of lines
Plug 'tpope/vim-endwise'                " close ruby blocks automatically TODO - is there something better out there?
Plug 'tpope/vim-fugitive'               " git integration
Plug 'tpope/vim-rails'                  " ruby on rails integration
Plug 'tpope/vim-rake'                   " rake integration for non-rails ruby projects
Plug 'tpope/vim-rhubarb'                " github-specific git integration
Plug 'tpope/vim-surround'               " surrounding movement
Plug 'vim-scripts/ZoomWin'              " ctrl+w o to zoom
Plug 'vim-scripts/matchit.zip'          " adds support for more % matches
Plug 'w0rp/ale'                         " asynchronous linting
call plug#end()

set autoindent                                             " automatically indent when hitting <cr>
set background=dark                                        " set colors for dark background
set backspace=indent,eol,start                             " set backspace to work correctly with autoindent, line breaks, and beyond insert mode start
set cmdheight=2                                            " increase the space for commands so the window doesn't feel jumpy
set complete-=i                                            " exclude included files from completion
set display+=lastline                                      " show as much of lines as possible instead of @
set expandtab                                              " when pressing tab, insert spaces
set hidden                                                 " allow buffers to be hidden, don't force writting before navigating away
set hlsearch                                               " highlight all search matching
set ignorecase                                             " perform case-insensitive searches
set laststatus=2                                           " always show the statusline
set lazyredraw                                             " redraw less often for smoother scrolling
set list                                                   " show whitespace characters in listchars
set listchars=tab:>\ ,trail:\.,extends:>,precedes:<,nbsp:+ " mark tabs, trailing spaces, non-breakable spaces
set nowrap                                                 " default to not wrapping long lines
set nrformats=alpha,hex,bin                                " set alpha, 0x, and 0b to be incremented, disable octal because decimal is often zero-padded
set number                                                 " display the line number in before each line
set shiftwidth=2                                           " set indentation with >> to 2
set signcolumn=yes                                         " always show the signcolumn so it doesn't move when activated, vim-gitgutter & ale
set smartcase                                              " when a search query has a capital letter, do an exact match search
set smarttab                                               " enable tabbing based on shiftwidth and tabstop
set softtabstop=2                                          " set each tab to insert 2 spaces with expandtab
set statusline+=%F                                         " display the filename in the statusline
set t_Co=16                                                " set low number of colors to make highlights stick out, match bright colors without forcing bold
set tabstop=2                                              " display tabs as 2 spaces wide
set ttyfast                                                " send characters to terminal quickly for smoother experience
set updatetime=100                                         " write swp faster, to trigger faster git status reaction, vim-gitgutter
set wildmenu                                               " enable tab completion from insert mode

let g:html_indent_script1 = "auto"
let g:html_indent_style1 = "auto"

colorscheme solarized

highlight Visual term=reverse cterm=reverse guibg=LightGrey
highlight ColorColumn ctermbg=magenta
call matchadd('ColorColumn', '\%81v', 100)

" highlight all tabs in red
autocmd ColorScheme * highlight AllTabs ctermbg=red guibg=red
highlight AllTabs ctermbg=red guibg=red
match AllTabs /\t/

" highlight trailing whitespace
highlight ExtraWhitespace ctermbg=red guibg=red
match ExtraWhitespace /\s\+$/
autocmd BufWinEnter * match ExtraWhitespace /\s\+$/
autocmd InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/
autocmd InsertLeave * match ExtraWhitespace /\s\+$/
autocmd BufWinLeave * call clearmatches()

let g:fzf_layout = { 'down': '~20%' }

" use fzf and rg for advanced find
command! -bang -nargs=* Find call fzf#vim#grep('rg --column --line-number --no-heading --fixed-strings --ignore-case --no-ignore --hidden --follow --glob "!.git/*" --color "always" '.shellescape(<q-args>).'| tr -d "\017"', 1, <bang>0)

" don't move on split
nnoremap <C-w>s Hmx`` \|:split<cr>`xzt``
nnoremap <C-w>v Hmx`` \|:vsplit<cr>`xzt``

" always show bookmarks
let NERDTreeShowBookmarks=1
let g:tagbar_left = 1 " open tagbar on the left
let g:tagbar_autoclose = 1 " close tagbar after selection
let g:tagbar_autofocus = 1 " focus when opened
let g:VimuxHeight = "25" "set vimux terminal height

let mapleader = "\<Space>" " set leader to spacebar
nmap <leader>w :w<cr>
nmap <leader>q :q<cr>
nmap <leader>x :x<cr>
nmap <leader><space> <C-w><C-w>
nmap <leader>h <C-w>h
nmap <leader>j <C-w>j
nmap <leader>k <C-w>k
nmap <leader>l <C-w>l
nmap <leader>v :vsp<cr><C-w>l
nmap <leader>s :sp<cr><C-w>j
nmap <leader>r :NERDTreeFind<cr>
nmap <leader>d :NERDTreeToggle<cr>
" nmap <c-t> :TagbarToggle<cr>
nmap <leader>n :n<cr>
nmap <leader>N :N<cr>
nmap <leader>t :tabnew<cr>
nmap <leader>f :Find<space>
nmap <leader>gs :GitGutterToggle<cr>
nmap <leader>gb :Gblame<cr>
nmap <leader>gw :Gbrowse<cr> " open file in browser at Github
xmap <leader>gw :Gbrowse<cr> " highlight lines
nmap <leader>g :Rg<space>
nmap <leader>rf :call VimuxRunCommand("spring rspec " . bufname("%"))<cr>
nmap <leader>rs :call VimuxRunCommand("spring rspec " . bufname("%") . ":" . line("."))<cr>
nmap <leader>rbf :call VimuxRunCommand("bundle exec rspec " . bufname("%"))<cr>
nmap <leader>rbs :call VimuxRunCommand("bundle exec rspec " . bufname("%") . ":" . line("."))<cr>
nmap <leader>rj :call VimuxRunCommand("yarn run jest " . bufname("%"))<cr>
nmap <leader>bb :VimuxCloseRunner<cr>
nmap <leader>bc :VimuxPromptCommand<cr>
nmap <leader>br :VimuxRunLastCommand<cr>
nmap <leader>o o<esc>
nmap <leader>O O<esc>
nmap <leader>y "+y
nmap <leader>p "+p
nmap <leader>a :A<cr>
nmap <silent> <leader>y :w !pbcopy<cr><cr>
vmap <silent> <leader>y :w !pbcopy<cr><cr>
xmap <leader>/ <Plug>Commentary<cr>
nmap <leader>/ <Plug>CommentaryLine<cr>
inoremap jk <esc> " set jk to escape to normal mode
nnoremap <silent> <C-L> :nohlsearch<C-R>=has('diff')?'<Bar>diffupdate':''<CR><CR><C-L> " clear hlsearch with ctrl+l
nnoremap <silent> <C-P> :Files<cr>
nmap <leader>cn :cnext<cr>
nmap <leader>cp :cprevious<cr>
nmap <leader>ln :ALENext<cr>
nmap <leader>lp :ALEPrevious<cr>

autocmd BufNewFile,BufRead *.es6 set filetype=javascript

let g:vim_json_syntax_conceal = 0 " don't do weird shit in json files

let g:jsx_ext_required = 0 " handle jsx in js files

" ripgrep configuration
let g:rg_highlight=1

let g:polyglot_disabled = ['graphql']

" vim-gitgutter
let g:gitgutter_enabled = 0 " disable by default

" vim-jsx-pretty
let g:vim_jsx_pretty_colorful_config = 1

" vim-lion
let b:lion_squeeze_spaces = 1 " eliminate excess preceeding spaces

" ale
let g:ale_completion_enabled = 1
"let g:ale_lint_on_save = 1
"let g:ale_lint_on_text_changed = 0
"let g:ale_lint_on_text_changed = 'never'
"let g:ale_open_list = 1
